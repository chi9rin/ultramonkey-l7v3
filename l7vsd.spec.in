%define prefix   /usr

#Uncomment these if they are not defined by your rpm macros file
%define _sysconfdir             /etc
%define _localstatedir          /var

Summary: UltraMonkey-l7 Layer7 software load brancer server
Name: l7vsd
Version: 3.0.0
Release: 0
License: BOOST SOFTWARE LICENSE
Packager: Norihisa NAKAI
Group: Network
Source0: %{name}-%{version}-%{release}.tar.gz
BuildRoot: /var/tmp/%{name}-%{version}-root
Docdir: %{prefix}/doc
Provides: %{name}-%{version}-%{release}
BuildPrereq: automake autoconf libtool
AutoReqProv: no
#Requires:

%description
Layer7 load barancer server daemon that works with TCP/UDP barancing

%prep
rm -rf ${RPM_BUILD_ROOT}
%setup

%build

# I am providing my own configure macro replacement. Hopefully this
# will result in fewer portability problems than using the one supplied
# by various vendours. I fear that I hope in vein.
CFLAGS="${CFLAGS:-%optflags}" ; export CFLAGS
if [ -f confgure.in ]; then
	aclocal
	libtoolize --force --copy
	automake
	autoconf
fi
./configure %{_target_platform} \
	--prefix=%{_prefix} \
	--exec-prefix=%{_exec_prefix} \
	--bindir=%{_bindir} \
	--sbindir=%{_sbindir} \
	--sysconfdir=%{_sysconfdir} \
	--datadir=%{_datadir} \
	--includedir=%{_includedir} \
	--libdir=%{_libdir} \
	--libexecdir=%{_libexecdir} \
	--localstatedir=%{_localstatedir} \
	--sharedstatedir=%{_sharedstatedir} \
	--mandir=%{_mandir} \
	--infodir=%{_infodir}

make -j2

%install
# rm -rf ${RPM_BUILD_ROOT}

# Manually install init script
#mkdir -p ${RPM_BUILD_ROOT}/etc/init.d/
#install -c -m 755 \
#        ${RPM_BUILD_DIR}/%{name}-%{version}/etc/init.d/sslproxy.rh \
#               ${RPM_BUILD_ROOT}/etc/init.d/sslproxy

# Install eveything else
#make DESTDIR=$RPM_BUILD_ROOT install

mkdir -p $RPM_BUILD_ROOT%{_sbindir}
mkdir -p $RPM_BUILD_ROOT%{_sysconfdir}
mkdir -p $RPM_BUILD_ROOT%{_sysconfdir}/init.d
mkdir -p $RPM_BUILD_ROOT%{_sysconfdir}/l7vs
mkdir -p $RPM_BUILD_ROOT%{_localstatedir}/log/l7vs/

install -c -m 755 -D src/l7vsadm $RPM_BUILD_ROOT%{_sbindir}

install -c -m 755 -D src/l7vsd $RPM_BUILD_ROOT%{_sibdir}

install -c -m 755 -D init.d/sslproxy $RPM_BUILD_ROOT%{_sysconfdir}/init.d

install -c -m 644 -D conf/sslproxy.logger_init.cf $RPM_BUILD_ROOT%{_sysconfdir}/l7vs/sslproxy
install -c -m 644 -D conf/sslproxy.target_1.cf $RPM_BUILD_ROOT%{_sysconfdir}/l7vs/sslproxy
install -c -m 644 -D conf/sslproxy.target_2.cf $RPM_BUILD_ROOT%{_sysconfdir}/l7vs/sslproxy
install -c -m 644 -D conf/sslproxyadm.cf $RPM_BUILD_ROOT%{_sysconfdir}/l7vs/sslproxy
install -c -m 644 -D conf/sslproxyadm.logrotate $RPM_BUILD_ROOT%/etc/logrotate.d/sslproxy

install -c -m 644 -D sslfiles/root.pem $RPM_BUILD_ROOT%{_sysconfdir}/l7vs/sslproxy
install -c -m 644 -D sslfiles/server.pem $RPM_BUILD_ROOT%{_sysconfdir}/l7vs/sslproxy
install -c -m 644 -D sslfiles/passwd.txt $RPM_BUILD_ROOT%{_sysconfdir}/l7vs/sslproxy
install -c -m 644 -D sslfiles/dh512.pem $RPM_BUILD_ROOT%{_sysconfdir}/l7vs/sslproxy

%clean
rm -rf $RPM_BUILD_ROOT

%files
%defattr(-, root, root, 0755)
%{_sbindir}
%config %{_sysconfdir}/init.d/*
%config %{_sysconfdir}/l7vs/sslproxy/*

#%doc README COPYING
#%{_mandir}

%changelog

